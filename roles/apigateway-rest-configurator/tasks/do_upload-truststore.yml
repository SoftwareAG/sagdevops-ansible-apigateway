---

  - debug: var=rvar_apigateway_truststore verbosity=1

  - name: fail if rvar_apigateway_truststore.keyStoreName not specified
    fail: 
      msg: "rvar_apigateway_truststore.keyStoreName is not specified...cannot do anything."
    when: rvar_apigateway_truststore.keyStoreName is not defined or rvar_apigateway_truststore.keyStoreName | trim == ""

  - name: fail if rvar_apigateway_truststore.keyStoreName contains invalid chars
    fail: 
      msg: "rvar_apigateway_truststore.keyStoreName contains invalid characters..."
    when: rvar_apigateway_truststore.keyStoreName | regex_search('^[0-9a-zA-Z_]+$') == ""

  - name: Get current API Gateway truststore
    uri:
      url: "{{ apigateway_rest_is_truststore }}"
      method: GET
      user: "{{ apigateway_rest_login_username }}"
      password: "{{ apigateway_rest_login_password }}"
      return_content: yes
      force_basic_auth: yes
      validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
      status_code: [200]
      body_format: json
      timeout: 30
    register: get_all_truststores

  - name: Response for All Current truststores
    debug: var=get_all_truststores verbosity=1

  - name: Parse response and extract name fields
    set_fact:
      get_all_truststore_names: "{{ lookup('template', 'apigateway_restapi_get_truststore_names.json.j2') }}"

  - name: All current truststore names
    debug: var=get_all_truststore_names verbosity=1

  - name: If new truststore data does not exist, then URI is the generic one
    set_fact:
      curl_wrapper_target_uri: "{{ apigateway_rest_is_truststore }}"
    when: not rvar_apigateway_truststore.keyStoreName in get_all_truststore_names

  - name: If new truststore data already exists, then URI contains the name of the trsustore
    set_fact:
      curl_wrapper_target_uri: "{{ apigateway_rest_is_truststore }}/{{ rvar_apigateway_truststore.keyStoreName }}"
    when: rvar_apigateway_truststore.keyStoreName in get_all_truststore_names

  - name: the identified curl uri based on same truststore exist or not...
    debug: var=curl_wrapper_target_uri verbosity=1

  # TODO: need to work on this...body structure is not the same as curl!!
  # - name: tasks for newer versions of ansible that support form-multipart
  #   block:

  #     - name: Upload new truststore to apigateway using uri module
  #       uri:
  #         url: "{{ curl_wrapper_target_uri }}"
  #         method: POST
  #         user: "{{ apigateway_rest_login_username }}"
  #         password: "{{ apigateway_rest_login_password }}"
  #         return_content: yes
  #         force_basic_auth: yes
  #         validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
  #         status_code: [200]
  #         body: "{{ rvar_apigateway_truststore | default({},true) }}"
  #         body_format: form-multipart
  #         timeout: 30
  #       register: update_keystore

  #     - debug: var=update_keystore verbosity=1

  #   when: ansible_version.major > 2 or (ansible_version.major == 2 and ansible_version.minor >= 10)

  - name: tasks for older versions of ansible that do not support form-multipart
    block:

      - name: Upload new truststore to apigateway using curl wrapper
        import_role:
          name: curl-wrapper
        vars:
          command: upload-multipart-formdata
          curl_wrapper_basicauth_user: "{{ apigateway_rest_login_username }}"
          curl_wrapper_basicauth_password: "{{ apigateway_rest_login_password }}"
          curl_wrapper_no_check_certs: "{{ apigateway_rest_no_check_certs }}"
          curl_wrapper_multipart_formdata_fields: "{{ rvar_apigateway_truststore }}"
          curl_wrapper_headers_fields:
            "Accept": "application/json"

    # when: ansible_version.major < 2 or (ansible_version.major == 2 and ansible_version.minor <= 9)