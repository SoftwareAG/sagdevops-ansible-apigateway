---

# this is an OLD version using static filter field names of name/version and not allowing more filter counts than 2
# inputs:
# _find_object_type: an object type to search
# [ "USER", "GROUP", "USERS", "GROUPS", "ACCESSPROFILES", "LDAPGROUPS", "CDSGROUPS", "ASSERTION", "APPLICATION", "API", "ALIAS", "POLICY", "POLICY_ACTION", "PLAN", "PACKAGE", "ADMINISTRATOR_SETTING", "PORTAL_GATEWAY", "OAUTH2_SCOPE_DATA", "SUBSCRIPTION", "API_DOCUMENT", "APPROVAL_CONFIGURATION", "OUTBOUND_PROXY", "PROXY_BYPASS", "URL_ALIAS", "KEYSTORE", "TRUSTSTORE", "KERBEROS_SETTING", "JNDI_PROVIDER_ALIAS", "JMS_CONNECTION_ALIAS", "JMS_TRIGGER", "WEB_SERVICE_ENDPOINT_ALIAS", "ACCESS_CONTROL_LIST", "RULE", "MICROGATEWAY_GROUPS", "GATEWAY_SCOPE", "OAUTH2MATERIALIZEDTOKEN", "TRANSACTION_EVENTS", "LIFECYCLE_EVENTS", "POLICYVIOLATION_EVENTS", "MONITOR_EVENTS", "ERROR_EVENTS", "THREATPROTECTION_EVENTS", "PERFORMANCE_METRICS", "QUOTA_USAGE", "DASHBOARD", "AUDIT_LOG", "REQUEST_RESPONSE_TRACE_SPANS", "APPLICATION_LOG", "MEDIATOR_TRACE_SPANS", "SERVER_LOG_TRACE_SPANS" ]
# _find_object_filters: list of name/version filters
#   - name: "some_name1"
#     version: "some_version1"
#   - name: "some_name2"
#     version: "some_version2"
# _find_object_responsefield_id: name of the id attribute (different based on type of object)
# _find_object_responsefield_name: name of the name attribute (different based on type of object)
# _find_object_responsefield_version: name of the version attribute (different based on type of object)
#
# returns:
# string list of _found_object_ids

- debug:
    var: "{{ item }}"
    verbosity: 1
  with_items:
    - _find_object_type
    - _find_object_filters
    - _find_object_responsefield_id
    - _find_object_responsefield_name
    - _find_object_responsefield_version

- name: fail if mandatory params not specified
  fail:
    msg: "A mandatory param was not defined, cannot do anything."
  when: item is not defined
  with_items:
    - _find_object_type
    - _find_object_filters
    - _find_object_responsefield_id
    - _find_object_responsefield_name
    - _find_object_responsefield_version

- name: transform object filters list to scope list
  set_fact:
    _find_object_unique_names: >-
          {{ 
          _find_object_filters
          | selectattr('name', 'defined')
          | map(attribute='name')
          | list 
          }}
    _find_object_unique_versions: >-
          {{
          _find_object_filters
          | selectattr('version', 'defined')
          | map(attribute='version')
          | list
          }}

- name: check if name and versions values were all provided
  fail:
    msg: "filter values for names and versions are not equal...some names or versions were not provided!"  
  when: _find_object_unique_names | length != _find_object_unique_versions | length

- include_tasks: "search.yml"
  vars:
    _apigateway_search_types_list:
      - "{{ _find_object_type }}"
    _apigateway_search_condition: "and"
    _apigateway_search_responsefields_list:
      - "{{ _find_object_responsefield_id }}"
      - "{{ _find_object_responsefield_name }}"
      - "{{ _find_object_responsefield_version }}"
    _apigateway_search_scopes_list:
      - attributeName: "{{ _find_object_responsefield_name }}"
        keyword: "{{ _find_object_unique_names | unique | join('|') }}"
      - attributeName: "{{ _find_object_responsefield_version }}"
        keyword: "{{ _find_object_unique_versions | unique | join('|') }}"

- name: check if _apigateway_search_response is not defined
  fail:
    msg: "_apigateway_search_response is not defined...something wrong happened"  
  when: _apigateway_search_response is not defined

- name: Parse response payload root attribute
  set_fact:
    _found_object_root_attribute: "{{ _apigateway_search_response | selectattr(_find_object_type, 'undefined') }}"

- name: check if _apigateway_search_response contains expected root attribute 
  fail:
    msg: "_apigateway_search_response does not contain attribute {{ _find_object_type }} ...something wrong happened"  
  when: _found_object_root_attribute is not defined or _found_object_root_attribute|list|length == 0

- name: Parse response payload for the ids
  set_fact:
    _found_object_ids: "{{ lookup('template', 'apigateway_search_responseparsing_nameversion_get_ids.json.j2') }}"
  vars:
    _objects_list: "{{ _apigateway_search_response[_find_object_type] }}"
    _objects_filters_list: "{{ _find_object_filters }}"
    _objects_match_attribute_id: "{{ _find_object_responsefield_id }}"
    _objects_match_attribute_name: "{{ _find_object_responsefield_name }}"
    _objects_match_attribute_version: "{{ _find_object_responsefield_version }}"

- name: All IDs found
  debug: var=_found_object_ids verbosity=1

- name: fail if response array has more than the amount of provided filter list
  fail: 
    msg: "The object_ids array contains more results that the provided filter array... not expected... Some records came back multiple time? Investigate!"
  when: _found_object_ids | length > _find_object_filters | length